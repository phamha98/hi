import React, { useRef, useState, useEffect } from 'react';
import {
  Animated,
  Text,
  View,
  StyleSheet,
  Button,
  SafeAreaView,
} from 'react-native';

const App = () => {
  // fadeAnim will be used as the value for opacity. Initial Value: 0
  const fadeAnim = useRef(new Animated.Value(0)).current;

  const fadeIn = () => {
    // Will change fadeAnim value to 1 in 5 seconds
    Animated.timing(fadeAnim, {
      toValue: 1,
      duration: 100,
    }).start(()=>fadeOut());
    
  };

  const fadeOut = () => {
    // Will change fadeAnim value to 0 in 3 seconds
    Animated.timing(fadeAnim, {
      toValue: 0,
      duration: 1000,
    }).start();
  };
  const [show, setShow] = useState(false);
  const _width = useRef(0);
  const _height = useRef(0);
  // useEffect(() => {
  //   animated();
  // }, [show]);
  // const animated = async () => {
  //   await fadeIn();
  //   // await fadeOut();
  // };
  return (
    <SafeAreaView style={styles.container}>
      <Animated.View
        style={[
          styles.fadingContainer,
          {
            // Bind opacity to animated value
            opacity: fadeAnim,
          },
        ]}>
        <Text style={styles.fadingText}>Fading View!</Text>
      </Animated.View>
      <View style={styles.buttonRow}>
        <Button title="Fade In View" onPress={fadeIn} />
        <Button title="Fade Out View" onPress={fadeOut} />
      </View>
      <View
        style={{ width: '90%', height: 500, backgroundColor: 'pink' }}
        onStartShouldSetResponder={(event) => {
          console.log('onStartShouldSetResponder', event.nativeEvent);

          _width.current = event.nativeEvent.locationX;
          _height.current = event.nativeEvent.locationY;
          setShow(!show);
          fadeIn();
        }}>
        <Animated.View
          style={[
            {
              width: 80,
              height: 80,
              backgroundColor: 'red',
              borderRadius: 100,
              position: 'absolute',
              left: _width.current-40,
              top: _height.current-40,
            },
            {
              // Bind opacity to animated value
              opacity: fadeAnim,
            },
          ]}
        />
      </View>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  fadingContainer: {
    padding: 20,
    backgroundColor: 'powderblue',
  },
  fadingText: {
    fontSize: 28,
  },
  buttonRow: {
    flexBasis: 100,
    justifyContent: 'space-evenly',
    marginVertical: 16,
  },
});

export default App;
